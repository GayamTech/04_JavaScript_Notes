<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Class</h2>

<p>How to use a JavaScript Class.</p>

<p id="demo"></p>

<script>
class Car {
  constructor(name, year) {
    this.name = name;
    this.year = year;
  }
}

const myCar = new Car("Ford", 2014);
document.getElementById("demo").innerHTML =
myCar.name + " " + myCar.year;
</script>

</body>
</html>




<!-- -->
<!-- -->
<!-- -->
<!--

    JavaScript Classes


ECMAScript 2015, also known as ES6, introduced JavaScript Classes.

JavaScript Classes are templates for JavaScript Objects.



 -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- 



    JavaScript Class Syntax


Use the keyword class to create a class.




Always add a method named constructor():

Syntax

class ClassName {
  constructor() { ... }
}




Example


class Car {
  constructor(name, year) {
    this.name = name;
    this.year = year;
  }
}



The example above creates a class named "Car".

The class has two initial properties: "name" and "year".






A JavaScript class is not an object.

It is a template for JavaScript objects.



-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- 


    Using a Class


When you have a class, you can use the class to create objects:



Example
let myCar1 = new Car("Ford", 2014);
let myCar2 = new Car("Audi", 2019);




The example above uses the Car class to create two Car objects.

The constructor method is called automatically when a new object is created.





-->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- 

    The Constructor Method

    
The constructor method is a special method:

It has to have the exact name "constructor"
It is executed automatically when a new object is created
It is used to initialize object properties
If you do not define a constructor method, JavaScript will add an empty constructor method.



-->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
 