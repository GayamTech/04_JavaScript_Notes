<!DOCTYPE html>
<html>
<body>
<h2>JavaScript Sets</h2>
<p>Create a Set from an Array:</p>

<p id="demo"></p>

<script>
// Create a Set
const letters = new Set(["a","b","c"]);

// Display set.size
document.getElementById("demo").innerHTML = letters.size;
</script>

</body>
</html>






<!-- -->
<!-- -->
<!-- -->
<!--

JavaScript Sets


-->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!--

A JavaScript Set is a collection of unique values.

Each value can only occur once in a Set.



-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--

How to Create a Set:

You can create a JavaScript Set by:




Passing an Array to new Set():


Create a new Set and use add() to add values
Create a new Set and use add() to add variables
The new Set() Method
Pass an Array to the new Set() constructor:




-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--


Essential Set Methods:



Method                          Description


new Set()                       Creates a new Set
add()                           Adds a new element to the Set
delete()                        Removes an element from a Set
has()                           Returns true if a value exists in the Set
forEach()                       Invokes a callback for each element in the Set
values()                        Returns an iterator with all the values in a Set
Property                        Description
size                            Returns the number of elements in a Set






-->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
