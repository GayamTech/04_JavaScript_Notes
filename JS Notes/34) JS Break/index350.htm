<!DOCTYPE html>
<html>
<body>

<h2>JavaScript break</h2>

<p id="demo"></p>

<script>
const cars = ["BMW", "Volvo", "Saab", "Ford"];
let text = "";

list: {
  text += cars[0] + "<br>";
  text += cars[1] + "<br>";
  break list;
  text += cars[2] + "<br>";
  text += cars[3] + "<br>";
}

document.getElementById("demo").innerHTML = text;
</script>

</body>
</html>








<!-- -->
<!-- -->
<!-- -->
<!--

JavaScript Break and Continue



-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--



The break statement "jumps out" of a loop.

The continue statement "jumps over" one iteration in the loop.



-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--




JavaScript Labels:


To label JavaScript statements you precede the statements with a label name and a colon:





label:


statements
The break and the continue statements are the only JavaScript statements that can "jump out of" a code block.




Syntax:

break labelname;

continue labelname;





The continue statement (with or without a label reference) can only be used to skip one loop iteration.





The break statement, without a label reference, can only be used to jump out of a loop or a switch.




With a label reference, the break statement can be used to jump out of any code block:






A code block is a block of code between { and }.


-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
