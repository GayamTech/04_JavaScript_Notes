<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Errors</h2>

<p>You cannot set the number of significant digits of a number to 500:</p>

<p id="demo">

<script>
let num = 1;
try {
  num.toPrecision(500);
}
catch(err) {
  document.getElementById("demo").innerHTML = err.name;
}
</script>

</body>
</html>




<!-- -->
<!-- -->
<!--

JavaScript Errors - Throw and Try to Catch


-->
<!-- -->
<!-- -->
<!--

Eval Error
An EvalError indicates an error in the eval() function.

Newer versions of JavaScript do not throw EvalError. Use SyntaxError instead.






Range Error
A RangeError is thrown if you use a number that is outside the range of legal values.

For example: You cannot set the number of significant digits of a number to 500.




-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--

Error Object Properties


Property                Description

name                    Sets or returns an error name
message                 Sets or returns an error message (a string)


-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--


Error Name Values

Six different values can be returned by the error name property:



Error Name                  Description

EvalError                   An error has occurred in the eval() function
RangeError                  A number "out of range" has occurred
ReferenceError              An illegal reference has occurred
SyntaxError                 A syntax error has occurred
TypeError                   A type error has occurred
URIError                    An error in encodeURI() has occurred



-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
