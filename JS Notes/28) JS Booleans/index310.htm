<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Booleas</h2>
<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML =
"100 is " + Boolean(100) + "<br>" +
"3.14 is " + Boolean(3.14) + "<br>" +
"-15 is " + Boolean(-15) + "<br>" +
"Any (not empty) string is " + Boolean("Hello") + "<br>" +
"Even the string 'false' is " + Boolean('false') + "<br>" +
"Any expression (except zero) is " + Boolean(1 + 7 + 3.14);
</script>

</body>
</html>







<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--


JavaScript Booleans




-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--

Everything With a "Value" is True



-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--



A JavaScript Boolean represents one of two values: true or false.


Boolean Values:


Very often, in programming, you will need a data type that can only have one of two values, like



YES / NO
ON / OFF
TRUE / FALSE




For this, JavaScript has a Boolean data type. It can only take the values true or false.








-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--


Comparisons and Conditions:




The chapter JS Comparisons gives a full overview of comparison operators.

The chapter JS Conditions gives a full overview of conditional statements.

Here are some examples:


Operator                    Description                 Example
==                          equal to                    if (day == "Monday")
>                           greater than                if (salary > 9000)
<                           less than                   if (age < 18)


The Boolean value of an expression is the basis for all JavaScript comparisons and conditions.






-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
