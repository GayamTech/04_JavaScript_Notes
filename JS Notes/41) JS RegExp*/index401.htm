<!DOCTYPE html>
<html>
<body>

<h2>JavaScript String Methods</h2>

<p>Search a string for "W3Schools", and display the position of the match:</p>

<p id="demo"></p>

<script>
let text = "Visit W3Schools!";
let n = text.search("W3Schools");
document.getElementById("demo").innerHTML = n;
</script>

</body>
</html>








<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--

JavaScript Regular Expressions


-->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--


Using String Methods


In JavaScript, regular expressions are often used with the two string methods: search() and replace().

The search() method uses an expression to search for a match, and returns the position of the match.

The replace() method returns a modified string where the pattern is replaced.








Using String search() With a String


The search() method searches a string for a specified value and returns the position of the match:




-->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--

What Is a Regular Expression?



A regular expression is a sequence of characters that forms a search pattern.

When you search for data in a text, you can use this search pattern to describe what you are searching for.

A regular expression can be a single character, or a more complicated pattern.



Regular expressions can be used to perform all types of text search and text replace operations.






Syntax:


/pattern/modifiers;


-->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--

Regular Expression Modifiers:


Modifiers can be used to perform case-insensitive more global searches:




Modifier                    Description

i                           Perform case-insensitive matching
g                           Perform a global match (find all matches rather than stopping
                            after the first match)
m                           Perform multiline matching






Regular Expression Patterns





Brackets are used to find a range of characters:

Expression                  Description

[abc]                       Find any of the characters between the brackets
[0-9]                       Find any of the digits between the brackets
(x|y)                       Find any of the alternatives separated with |





Metacharacters are characters with a special meaning:

Metacharacter               Description

\d                          Find a digit
\s                          Find a whitespace character
\b                          Find a match at the beginning of a word like this: \bWORD, or at
                            the end of a word like this: WORD\b
\uxxxx                      Find the Unicode character specified by the hexadecimal number
                            xxxx





Quantifiers define quantities:

Quantifier          Description

n+                  Matches any string that contains at least one n
n*                  Matches any string that contains zero or more occurrences of n
n?                  Matches any string that contains zero or one occurrences of n













-->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
