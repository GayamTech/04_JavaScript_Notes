<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Objects</h2>
<p>Creating an object:</p>
<pre>JavaScript objects are containers for named values, called properties and methods.</pre>


<p id="demo"></p>

<script>
const person = {
  firstName : "John",
  lastName  : "Doe",
  age     : 50,
  eyeColor  : "blue"
};

document.getElementById("demo").innerHTML = person.firstName + " " + person.lastName;
</script>

</body>
</html>








<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--

    In JavaScript, almost "everything" is an object.

Booleans can be objects (if defined with the new keyword)
Numbers can be objects (if defined with the new keyword)
Strings can be objects (if defined with the new keyword)
Dates are always objects
Maths are always objects
Regular expressions are always objects
Arrays are always objects
Functions are always objects
Objects are always objects
All JavaScript values, except primitives, are objects.




 -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- 

    JavaScript defines 5 types of primitive data types:

string
number
boolean
null
undefined


-->
<!-- -->
<!-- -->
<!-- -->
<!-- 

    Object values are written as name : value pairs (name and value separated by a colon).


    A JavaScript object is a collection of named values

    It is a common practice to declare objects with the const keyword.


--> 
<!-- -->
<!-- -->
<!-- -->
<!--

    Objects written as name value pairs are similar to:

Associative arrays in PHP
Dictionaries in Python
Hash tables in C
Hash maps in Java
Hashes in Ruby and Perl



 -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!--
    
Object Methods
Methods are actions that can be performed on objects.

Object properties can be both primitive values, other objects, and functions.

An object method is an object property containing a function definition. -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
