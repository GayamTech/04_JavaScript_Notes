<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Object.getOwnPropertyNames()</h2>

<p>This example list the properties of an object.</p>

<p id="demo"></p>

<script>
// Create an object:
const person = {
  firstName: "John",
  lastName: "Doe",
  language: "EN"
}

// Change Property
Object.defineProperty(person, "language", {enumerable:false});

// Display Properties
document.getElementById("demo").innerHTML = Object.getOwnPropertyNames(person);
</script>

</body>
</html>




<!-- -->
<!-- -->
<!-- -->
<!-- 


    Changing Meta Data


ES5 allows the following property meta data to be changed:

writable : true      // Property value can be changed
enumerable : true    // Property can be enumerated
configurable : true  // Property can be reconfigured



writable : false     // Property value can not be changed
enumerable : false   // Property can be not enumerated
configurable : false // Property can be not reconfigured






ES5 allows getters and setters to be changed:

// Defining a getter
get: function() { return language }
// Defining a setter
set: function(value) { language = value }







This example makes language read-only:

Object.defineProperty(person, "language", {writable:false});







This example makes language not enumerable:

Object.defineProperty(person, "language", {enumerable:false});





-->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!--

    Listing All Properties




This example list all properties of an object:



Example


const person = {
  firstName: "John",
  lastName : "Doe",
  language : "EN"
};

Object.defineProperty(person, "language", {enumerable:false});
Object.getOwnPropertyNames(person);  // Returns an array of properties




 -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
