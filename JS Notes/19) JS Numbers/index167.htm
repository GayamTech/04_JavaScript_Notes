<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Numbers</h2>

<p>A number can be an object, but there is no need to create a number as an object.</p>

<p id="demo"></p>

<script>
let x = 123;
let y = new Number(123);
document.getElementById("demo").innerHTML = typeof x + "<br>" + typeof y;
</script>

</body>
</html>











<!-- -->
<!-- -->
<!-- -->
<!--

JavaScript Numbers:


-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!--


Numbers Can be Objects:

Normally JavaScript numbers are primitive values created from literals:

let x = 123;




But numbers can also be defined as objects with the keyword new:

let y = new Number(123);




-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!--


Do not create Number objects. It slows down execution speed.
The new keyword complicates the code. This can produce some unexpected results:


-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
