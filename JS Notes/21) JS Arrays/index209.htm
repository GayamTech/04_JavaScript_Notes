<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Arrays</h2>

<p>Avoid using new Array(). Use [] instead.</p>

<p id="demo"></p>

<script>
//const points = new Array(40, 100, 1, 5, 25, 10);
const points = [40, 100, 1, 5, 25, 10];
document.getElementById("demo").innerHTML = points[0];
</script>

</body>
</html>






<!-- -->
<!-- -->
<!-- -->
<!--

JavaScript Arrays  :


-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--

The Difference Between Arrays and Objects:


In JavaScript, arrays use numbered indexes.

In JavaScript, objects use named indexes.




Arrays are a special kind of objects, with numbered indexes.




When to Use Arrays. When to use Objects.


JavaScript does not support associative arrays.
You should use objects when you want the element names to be strings (text).
You should use arrays when you want the element names to be numbers


-->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--

JavaScript new Array():

JavaScript has a built in array constructor new Array().

But you can safely use [] instead.





These two different statements both create a new empty array named points:

const points = new Array();
const points = [];






These two different statements both create a new array containing 6 numbers:




-->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
