<!DOCTYPE html>
<html>
<body>

<h2>JavaScript ISO Dates</h2>

<p id="demo"></p>


<br>
<hr>
<h2>JavaScript ISO Dates</h2>
<h1>ISO dates can be written without specifying the day (YYYY-MM):</h1>
<p id="demo1"></p>
<br>
<hr>

<h2>JavaScript ISO Dates</h2>
<h1>ISO dates can be written without month and day (YYYY):</h1>
<p id="demo2"></p>
<br>
<hr>



<h2>JavaScript ISO Dates</h2>
<p>Separate date and time with a capital T.</p>
<p>Indicate UTC time with a capital Z.</p>

<p id="demo3"></p>
<br>
<hr>




<h2>JavaScript ISO Dates</h2>
<p>Modify the time relative to UTC by adding +HH:MM or subtraction -HH:MM to the time.</p>

<p id="demo4"></p>
<br>
<hr>



<h2>JavaScript new Date()</h2>
<h1>If you want to modify the time relative to UTC, remove the Z and add +HH:MM or -HH:MM instead:</h1>
<p id="demo5"></p>
<br>
<hr>


<h2>JavaScript new Date()</h2>
<h1>Long dates are most often written with a "MMM DD YYYY" syntax like this:</h1>
<p id="demo6"></p>
<br>
<hr>



<h2>JavaScript new Date()</h2>
<h1>Month and day can be in any order:</h1>
<p id="demo7"></p>
<br>
<hr>




<h2>JavaScript new Date()</h2>
<h1>And, month can be written in full (January), or abbreviated (Jan):</h1>
<p id="demo8"></p>
<br>
<hr>




<h2>JavaScript new Date()</h2>
<p id="demo9"></p>
<br>
<hr>





<h2>JavaScript new Date()</h2>
<h1>Commas are ignored. Names are case insensitive:</h1>
<p id="demo10"></p>
<br>
<hr>


<h2>JavaScript Date.parse()</h2>
<p>Date.parse() returns the number of milliseconds between the date and January 1, 1970:</p>

<p id="demo11"></p>
<br>
<hr>




<h2>JavaScript Date.parse()</h2>
<p>Date.parse(string) returns milliseconds.</p>
<p>You can use the return value to convert the string to a date object:</p>

<p id="demo12"></p>



<script>
const d = new Date("2015-03-25");
document.getElementById("demo").innerHTML = d;


const e = new Date("2015-03");
document.getElementById("demo1").innerHTML = e;

const f = new Date("2015");
document.getElementById("demo2").innerHTML = f;


const g = new Date("2015-03-25T12:00:00Z");
document.getElementById("demo3").innerHTML = g;



document.getElementById("demo4").innerHTML =
new Date("2015-03-25T12:00:00-06:00");



const h = new Date("03/25/2015");
document.getElementById("demo5").innerHTML = h;


const i = new Date("Mar 25 2015");
document.getElementById("demo6").innerHTML = i;



const j = new Date("25 Mar 2015");
document.getElementById("demo7").innerHTML = j;


const k = new Date("January 25 2015");
document.getElementById("demo8").innerHTML = k;




const l = new Date("Jan 25 2015");
document.getElementById("demo9").innerHTML = l;


const m = new Date("JANUARY, 25, 2015");
document.getElementById("demo10").innerHTML = m;



const msec = Date.parse("March 21, 2012");
document.getElementById("demo11").innerHTML = msec;



let msec1 = Date.parse("March 21, 2012");
const n = new Date(msec1);
document.getElementById("demo12").innerHTML = n;

</script>

</body>
</html>







<!-- -->
<!-- -->
<!--

JavaScript Date Formats

-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--

JavaScript Date Input:



There are generally 3 types of JavaScript date input formats:

Type                Example
ISO Date            "2015-03-25" (The International Standard)
Short Date          "03/25/2015"
Long Date           "Mar 25 2015" or "25 Mar 2015"

-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--

The ISO format follows a strict standard in JavaScript.

The other formats are not so well defined and might be browser specific.

-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--


JavaScript Date Output:


Independent of input format, JavaScript will (by default) output dates in full text string format:

Tue Mar 24 2015 20:00:00 GMT-0400 (Eastern Daylight Time)


-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--

JavaScript ISO Dates:


ISO 8601 is the international standard for the representation of dates and times.

The ISO 8601 syntax (YYYY-MM-DD) is also the preferred JavaScript date format:



-->
<!-- -->
<!-- -->
<!-- -->
<!--

The computed date will be relative to your time zone.

Depending on your time zone, the result above will vary between March 24 and March 25.

-->
<!-- -->
<!-- -->
<!-- -->
<!--

ISO Dates (Year and Month):

ISO dates can be written without specifying the day (YYYY-MM):



Time zones will vary the result above between February 28 and March 01.


-->
<!-- -->
<!-- -->
<!-- -->
<!--

ISO Dates (Only Year):


ISO dates can be written without month and day (YYYY):


Time zones will vary the result above between December 31 2014 and January 01 2015.


-->
<!-- -->
<!-- -->
<!--

ISO Dates (Date-Time):


ISO dates can be written with added hours, minutes, and seconds (YYYY-MM-DDTHH:MM:SSZ):


-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--


Date and time is separated with a capital T.

UTC time is defined with a capital letter Z.





If you want to modify the time relative to UTC, remove the Z and add +HH:MM or -HH:MM instead:



UTC (Universal Time Coordinated) is the same as GMT (Greenwich Mean Time).



Omitting T or Z in a date-time string can give different results in different browsers.


-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--

Time Zones:


When setting a date, without specifying the time zone, JavaScript will use the browser's time zone.

When getting a date, without specifying the time zone, the result is converted to the browser's time zone.

In other words: If a date/time is created in GMT (Greenwich Mean Time), the date/time will be converted to CDT (Central US Daylight Time) if a user browses from central US.



-->
<!-- -->
<!-- -->
<!-- -->
<!--

JavaScript Short Dates.


Short dates are written with an "MM/DD/YYYY" syntax like this:



-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--

WARNINGS !



In some browsers, months or days with no leading zeroes may produce an error:

const d = new Date("2015-3-25");







The behavior of "YYYY/MM/DD" is undefined.
Some browsers will try to guess the format. Some will return NaN.

const d = new Date("2015/03/25");







The behavior of  "DD-MM-YYYY" is also undefined.
Some browsers will try to guess the format. Some will return NaN.

const d = new Date("25-03-2015");




-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--


JavaScript Long Dates.

Long dates are most often written with a "MMM DD YYYY" syntax like this:


Month and day can be in any order:


And, month can be written in full (January), or abbreviated (Jan):


Commas are ignored. Names are case insensitive




-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--


Date Input - Parsing Dates:

If you have a valid date string, you can use the Date.parse() method to convert it to milliseconds.

Date.parse() returns the number of milliseconds between the date and January 1, 1970:





You can then use the number of milliseconds to convert it to a date object:


-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
