<!DOCTYPE html>
<html>
<body>

<h2>JavaScript const</h2>

<p>Declaring a constant array does NOT make the elements unchangeble:</p>

<p id="demo"></p>

<script>
// Create an Array:
const cars = ["Saab", "Volvo", "BMW"];

// Change an element:
cars[0] = "Toyota";

// Add an element:
cars.push("Audi");

// Display the Array:
document.getElementById("demo").innerHTML = cars;
</script>

</body>
</html>






<!-- -->
<!-- -->
<!--



JavaScript Const:


-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!--




Must be Assigned:


JavaScript const variables must be assigned a value when they are declared:



Correct:
const PI = 3.14159265359;


Incorrect:
const PI;
PI = 3.14159265359;




When to use JavaScript const?:


As a general rule, always declare a variable with const unless you know that the value will change.




Use const when you declare:

A new Array

A new Object

A new Function

A new RegExp








Constant Objects and Arrays:



The keyword const is a little misleading.

It does not define a constant value. It defines a constant reference to a value.




Because of this you can NOT:

Reassign a constant value

Reassign a constant array

Reassign a constant object





But you CAN:

Change the elements of constant array

Change the properties of constant object












Constant Arrays:

You can change the elements of a constant array:





-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
