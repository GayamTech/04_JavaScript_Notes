<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Operators</h2>

<p>The + operator concatenates (adds) strings.</p>
<br>
<p>The assignment operator += can concatenate strings.</p>
<br>
<p>Adding a number and a string, returns a string.</p>


<br>
<br>
<p id="demo"></p>
<br>
<p id="demo1"></p>
<br>
<p id="demo2"></p>
<br>
<p id="demo3"></p>
<br>
<p id="demo4"></p>
<p id="demo"></p>

<script>
let text1 = "John";
let text2 = "Doe";
let text3 = text1 + " " + text2;
document.getElementById("demo").innerHTML = text3;



let text4 = "What a very ";
text4 += "nice day";
document.getElementById("demo1").innerHTML = text4;


let x = 5 + 5;
let y = "5" + 5;
let z = "Hello" + 5;
document.getElementById("demo2").innerHTML =
x + "<br>" + y + "<br>" + z;
</script>

</body>
</html>



<!-- -->
<!-- -->
<!--



JavaScript Operators:



-->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!-- -->
<!--

JavaScript String Operators:


The + operator can also be used to add (concatenate) strings.

-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!--

The += assignment operator can also be used to add (concatenate) strings:



-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- --> 
<!--

Adding Strings and Numbers:


Adding two numbers, will return the sum, but adding a number and a string will return a string:

-->
<!-- -->
<!-- -->
<!-- -->
<!--

If you add a number and a string, the result will be a string!

-->
<!-- -->
<!-- -->
<!-- --> 
<!-- -->
<!--

JavaScript Comparison Operators:


Operator            Description

==                  equal to
===                 equal value and equal type
!=                  not equal
!==                 not equal value or not equal type
>                   greater than
<                   less than
>=                  greater than or equal to
<=                  less than or equal to
?                   ternary operator

-->
<!-- -->
<!-- -->
<!-- -->
<!--

JavaScript Logical Operators:


Operator                Description


&&                      logical and

||                      logical or

!                       logical not

-->
<!-- -->
<!-- --> 
<!-- -->
<!--

JavaScript Type Operators :


Operator                Description


typeof                  Returns the type of a variable

instanceof              Returns true if an object is an instance of an object type


-->
<!-- -->
<!--


JavaScript Bitwise Operators:

Bit operators work on 32 bits numbers.

Any numeric operand in the operation is converted into a 32 bit number. The result is converted back to a JavaScript number.




Operator       Description    Example           Same as         Result    Decimal
&              AND              5 & 1           0101 & 0001     0001       1
|               OR              5 | 1           0101 | 0001     0101       5
~               NOT             ~ 5             ~0101           1010       10
^               XOR             5 ^ 1           0101 ^ 0001     0100       4
<<              Zero fill left shift  5 << 1    0101 << 1       1010       10
>>              Signed right shift    5 >> 1    0101 >> 1       0010        2
>>>             Zero fill right shift 5 >>> 1    0101 >>> 1    0010         2





-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->

