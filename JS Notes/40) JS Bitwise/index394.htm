<!DOCTYPE html>
<html>
<body>

<h2>JavaScript Bitwise XOR</h2>

<p id="demo"></p>

<script>
document.getElementById("demo").innerHTML = 5 ^ 1;
</script>

</body>
</html>









<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--

JavaScript Bitwise Operations



-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--


JavaScript Bitwise XOR (^):



Bitwise XOR returns 1 if the bits are different:




-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--


JavaScript Bitwise Operators:



Operator            Name                    Description
&                   AND                     Sets each bit to 1 if both bits are 1
|                   OR                      Sets each bit to 1 if one of two bits is 1

^                   XOR                     Sets each bit to 1 if only one of two bits is 1
~                   NOT                     Inverts all the bits

<<                  Zero fill left shift    Shifts left by pushing zeros in from the right
                                            and let the leftmost bits fall off

>>                  Signed right shift      Shifts right by pushing copies of the leftmost
                                            bit in from the left, and let the rightmost bits fall off

>>>                 Zero fill right shift    Shifts right by pushing zeros in from the left,
                                                and let the rightmost bits fall off



-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!--


Binary Numbers


Binary numbers with only one bit set is easy to understand:



Binary Representation                       Decimal value


00000000000000000000000000000001                1
00000000000000000000000000000010                2
00000000000000000000000000000100                4
00000000000000000000000000001000                8
00000000000000000000000000010000                16
00000000000000000000000000100000                32
00000000000000000000000001000000                64





-->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
<!-- -->
